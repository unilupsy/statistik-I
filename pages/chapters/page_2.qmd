---
title: "Vorgehen Website aktualisieren"
---


# Vorgehen Website verändern

## Aktuellen Stand der Website auf PC laden

-   In GithubDesktop den `main`-Branch **pullen**

-   In GithubDesktop einen neuen Branch erstellen (**branchen**) (sinnvoller Name z.B. `test-pageedit`)

-   Auf PC `RStudio`-Projekt öffnen

## Website anpassen

-   Anpassungen vornehmen (z.B. Neues `.qmd` File erstellen und abspeichern unter `pages/chapters/` oder bestehendes File ändern)

-   Checken ob der Code läuft mit `Render`

-   im `_quarto.yml`-File das neue `.qmd`-File ergänzen

-   Seite builden: `Build` \> `Render Website`

## Änderungen Online stellen

-   In GitDesktop Änderungen **comitten** (sinnvolle Commit-Msg erstellen)

-   In GitDesktop den Commit auf Branch **pushen**

-   Auf Github Website **merge request** erstellen (Branch --\> Main), checken ob *mergeable*

-   Wenn *mergeable* **mergen**, dann wird die Website online aktualisiert

-   Checken ob das geklappt hat


# Good to know

## .gitignore

Im `.gitignore`- File werden alle Ordner/Files benannt, die __nicht__ auf Github hochgeladen werden sollen. Die sind aber auch __nicht__ versionsgeschützt bzw. für andere Personen verfügbar, die das Repositorium __pullen__.

In `archive` oder `private` kannst du zB etwas tun, dass nicht verändert werden soll, nicht gesichert aber zwischengelagert werden muss. Ich brauche das manchmal, wenn ich bei Git unsicher bin beim Wechseln des Branches, dann kopier ich mir meine geänderten Files ins `archive`, dass dieses - falls ich einen Fehler mache - nichts überschreibe. In `private` mach ich mir z.B. Todo Listen, Notizen oder Datensätze, die ich noch nicht hochladen aber schon im Projekt verwenden will.





